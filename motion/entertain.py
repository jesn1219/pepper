# Choregraphe bezier export in Python.
from naoqi import ALProxy



def elephant(srv) :
    motion = srv["motion"]
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0.637045, [3, -0.426667, 0], [3, 0.36, 0]], [0.149268, [3, -0.36, 0], [3, 0.466667, 0]], [0.637045, [3, -0.466667, 0], [3, 0.36, 0]], [0.149268, [3, -0.36, 0], [3, 0.44, 0]], [0.637045, [3, -0.44, 0], [3, 0.346667, 0]], [-0.208621, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-0.3735, [3, -0.426667, 0], [3, 0.36, 0]], [-0.370809, [3, -0.36, 0], [3, 0.466667, 0]], [-0.3735, [3, -0.466667, 0], [3, 0.36, 0]], [-0.370809, [3, -0.36, 0], [3, 0.44, 0]], [-0.3735, [3, -0.44, 0], [3, 0.346667, 0]], [-0.00460196, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("HipPitch")
    times.append([0.96, 2.04, 3.44, 4.52, 5.84, 7.16])
    keys.append([[-0.941134, [3, -0.333333, 0], [3, 0.36, 0]], [-0.0407854, [3, -0.36, 0], [3, 0.466667, 0]], [-0.941134, [3, -0.466667, 0], [3, 0.36, 0]], [-0.0407854, [3, -0.36, 0], [3, 0.44, 0]], [-0.941134, [3, -0.44, 0], [3, 0.44, 0]], [-0.0352817, [3, -0.44, 0], [3, 0, 0]]])

    names.append("HipRoll")
    times.append([0.96, 2.04, 3.44, 4.52, 5.84, 7.16])
    keys.append([[-0.00218318, [3, -0.333333, 0], [3, 0.36, 0]], [-0.00218318, [3, -0.36, 0], [3, 0.466667, 0]], [-0.00218318, [3, -0.466667, 0], [3, 0.36, 0]], [-0.00218318, [3, -0.36, 0], [3, 0.44, 0]], [-0.00218318, [3, -0.44, 0], [3, 0.44, 0]], [-0.00766992, [3, -0.44, 0], [3, 0, 0]]])

    names.append("KneePitch")
    times.append([0.96, 2.04, 3.44, 4.52, 5.84, 7.16])
    keys.append([[0.353169, [3, -0.333333, 0], [3, 0.36, 0]], [-0.00319533, [3, -0.36, 0], [3, 0.466667, 0]], [0.353169, [3, -0.466667, 0], [3, 0.36, 0]], [-0.00319533, [3, -0.36, 0], [3, 0.44, 0]], [0.353169, [3, -0.44, 0], [3, 0.44, 0]], [-0.00766992, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-1.56207, [3, -0.426667, 0], [3, 0.36, 0]], [-1.54741, [3, -0.36, 0], [3, 0.466667, 0]], [-1.56207, [3, -0.466667, 0], [3, 0.36, 0]], [-1.54741, [3, -0.36, 0], [3, 0.44, 0]], [-1.56207, [3, -0.44, 0], [3, 0.346667, 0]], [-0.515418, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0, [3, -0.426667, 0], [3, 0.36, 0]], [0.0280028, [3, -0.36, 0], [3, 0.466667, 0]], [0, [3, -0.466667, 0], [3, 0.36, 0]], [0.0280028, [3, -0.36, 0], [3, 0.44, 0]], [0, [3, -0.44, 0.0280028], [3, 0.346667, -0.0220628]], [-1.23792, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0.602755, [3, -0.426667, 0], [3, 0.36, 0]], [0.602755, [3, -0.36, 0], [3, 0.466667, 0]], [0.602755, [3, -0.466667, 0], [3, 0.36, 0]], [0.602755, [3, -0.36, 0], [3, 0.44, 0]], [0.602755, [3, -0.44, 0], [3, 0.346667, 0]], [0.589631, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-0.403171, [3, -0.426667, 0], [3, 0.36, 0]], [-0.654399, [3, -0.36, 0], [3, 0.466667, 0]], [-0.403171, [3, -0.466667, 0], [3, 0.36, 0]], [-0.654399, [3, -0.36, 0], [3, 0.44, 0]], [-0.403171, [3, -0.44, -0.251228], [3, 0.346667, 0.197937]], [1.55699, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0.139697, [3, -0.426667, 0], [3, 0.36, 0]], [0.15506, [3, -0.36, 0], [3, 0.466667, 0]], [0.139697, [3, -0.466667, 0], [3, 0.36, 0]], [0.15506, [3, -0.36, 0], [3, 0.44, 0]], [0.139697, [3, -0.44, 0.00517175], [3, 0.346667, -0.00407471]], [0.127321, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0, [3, -0.426667, 0], [3, 0.36, 0]], [0, [3, -0.36, 0], [3, 0.466667, 0]], [0, [3, -0.466667, 0], [3, 0.36, 0]], [0, [3, -0.36, 0], [3, 0.44, 0]], [0, [3, -0.44, 0], [3, 0.346667, 0]], [0.0106959, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([1.24, 1.8, 2.84, 3.72, 4.28, 5.32, 6.12, 7.16])
    keys.append([[0.534071, [3, -0.426667, 0], [3, 0.186667, 0]], [0.00872665, [3, -0.186667, 0], [3, 0.346667, 0]], [0.884857, [3, -0.346667, 0], [3, 0.293333, 0]], [0.534071, [3, -0.293333, 0.178471], [3, 0.186667, -0.113573]], [0.00872665, [3, -0.186667, 0], [3, 0.346667, 0]], [0.884857, [3, -0.346667, 0], [3, 0.266667, 0]], [0.534071, [3, -0.266667, 0.0037283], [3, 0.346667, -0.00484679]], [0.529224, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[1.2363, [3, -0.426667, 0], [3, 0.36, 0]], [1.24098, [3, -0.36, 0], [3, 0.466667, 0]], [1.2363, [3, -0.466667, 0], [3, 0.36, 0]], [1.24098, [3, -0.36, 0], [3, 0.44, 0]], [1.2363, [3, -0.44, 0.00114215], [3, 0.346667, -0.000899875]], [1.23486, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([1.76, 2.84, 4.24, 5.32, 7.16])
    keys.append([[0.602465, [3, -0.6, 0], [3, 0.36, 0]], [0.98, [3, -0.36, 0], [3, 0.466667, 0]], [0.602465, [3, -0.466667, 0], [3, 0.36, 0]], [0.98, [3, -0.36, 0], [3, 0.613333, 0]], [0.599297, [3, -0.613333, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[0.53058, [3, -0.426667, 0], [3, 0.36, 0]], [-0.506132, [3, -0.36, 0], [3, 0.466667, 0]], [0.53058, [3, -0.466667, 0], [3, 0.36, 0]], [-0.506132, [3, -0.36, 0], [3, 0.44, 0]], [0.53058, [3, -0.44, -0.384078], [3, 0.346667, 0.302607]], [1.55392, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-0.00872665, [3, -0.426667, 0], [3, 0.36, 0]], [-0.0383779, [3, -0.36, 0], [3, 0.466667, 0]], [-0.00872665, [3, -0.466667, 0], [3, 0.36, 0]], [-0.0383779, [3, -0.36, 0], [3, 0.44, 0]], [-0.00872665, [3, -0.44, 0], [3, 0.346667, 0]], [-0.13499, [3, -0.346667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([1.24, 2.32, 3.72, 4.8, 6.12, 7.16])
    keys.append([[-1.27409, [3, -0.426667, 0], [3, 0.36, 0]], [-1.27223, [3, -0.36, 0], [3, 0.466667, 0]], [-1.27409, [3, -0.466667, 0], [3, 0.36, 0]], [-1.27223, [3, -0.36, 0], [3, 0.44, 0]], [-1.27409, [3, -0.44, 0], [3, 0.346667, 0]], [-0.019984, [3, -0.346667, 0], [3, 0, 0]]])
    motion.angleInterpolationBezier(names, times, keys)

